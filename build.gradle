buildscript {
    ext.versions = [asm    : '6.0',
                    kotlin : '1.3.11',
                    android: [gradle: '3.3.0',],]
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.10.1'
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = ''
    }
    hooks {
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(['\/])$v(['\/])/ },
                           replacement: { v, p -> "\$1$v\$2" }]
        pre 'fileUpdate', [file       : 'README.md',
                           pattern    : { v, p -> /(\/Kotlin-)[\d.]+/ },
                           replacement: { v, p -> "\$1${versions.kotlin}" }]
        pre 'commit', { v, p -> "Release version: $v [ci skip]" }
    }
}

version = scmVersion.version
group = 'com.github.tmurakami'

repositories {
    google()
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.31.0'
    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    implementation "org.ow2.asm:asm:${versions.asm}"
    compileOnly "com.android.tools.build:gradle-api:${versions.android.gradle}"
    compileOnly("com.android.tools.build:gradle:${versions.android.gradle}") { transitive = false }
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:0.43'
    testImplementation 'io.mockk:mockk:1.9.3'
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    testImplementation "com.android.tools.build:gradle-api:${versions.android.gradle}"
    testImplementation 'com.google.android:android:4.1.1.4'
    testImplementation 'org.objenesis:objenesis:3.0.1'
    testImplementation "org.ow2.asm:asm-util:${versions.asm}"
}

dependencyUpdates.resolutionStrategy {
    componentSelection.all {
        if (candidate.version =~ /(?i)-(?:alpha|beta|rc)[-\d]?/) reject('Release candidate')
    }
}

task ktlint(type: JavaExec, group: 'verification') {
    inputs.files fileTree(dir: 'src', include: '**/*.kt')
    outputs.dir 'src'
    description = 'Check Kotlin code style.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args 'src/**/*.kt'
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: 'formatting') {
    inputs.files fileTree(dir: 'src', include: '**/*.kt')
    outputs.dir 'src'
    description = 'Fix Kotlin code style deviations.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '-F', 'src/**/*.kt'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'SplitCompat weaver'
                description = "A Gradle plugin which automatically weaves 'SplitCompat#install' " +
                        "calls into activities and services in a dynamic feature module"
                url = 'https://github.com/tmurakami/splitcompat-weaver-gradle-plugin'
                inceptionYear = '2019'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'tmurakami'
                        name = 'Tsuyoshi Murakami'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/tmurakami/splitcompat-weaver-gradle-plugin.git'
                    developerConnection = 'scm:git:ssh://github.com/tmurakami/splitcompat-weaver-gradle-plugin.git'
                    url = 'https://github.com/tmurakami/splitcompat-weaver-gradle-plugin'
                }
            }
        }
        mavenSources(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}
